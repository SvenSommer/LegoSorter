from pathlib import Path
from fastai import *
from fastai.vision import *

# SETUP HERE
classes = [' 2486', ' 8761', ' 92589', '10288', '11156', '11458', '11477', '14181', '14417', '14419', '15068', '15301', '15367', '15540', '15573', '15706', '15712', '17836', '18671', '2343', '2357', '2412b', '2420', '2431', '2432', '2436', '2444', '2445', '2458', '2489', '2527', '2536a', '2540', '2555', '2654', '2730', '2780', '2817', '2877', '2921', '3001', '3002', '30027bc01', '3003', '3004', '3005', '3007', '3008', '3009', '30094', '3010', '30133', '30136', '30157', '30176', '3020', '3021', '3022', '3023', '30237', '30237b', '3024', '30241', '30293', '3030', '3031', '3032', '3034', '3035', '30355', '30356', '30363', '3037', '30374', '30377', '30388', '3039', '30413', '30414', '3043', '3048c', '30503', '30505', '30541', '30552', '30565', '30592', '30602', '3062b', '3068b', '3069b', '3070b', '3176', '3185', '32002', '32013', '32016', '32018', '32028', '32039', '32064', '32065', '32138', '32140', '32175', '32184', '32209', '32249', '32250', '32316', '32449', '32523', '32530', '32556', '3298', '3460', '3622', '3623', '3640', '3660', '3665', '3666', '3673', '3678b', '3680', '3684a', '3700', '3701', '3702', '3703', '3705', '3706', '3709b', '3710', '3713', '3738', '3747b', '3794a', '3795', '3823', '3830', '3831', '3832', '3839b', '3841', '3873', '3894', '3938', '3941', '3958', '3961', '3962b', '4032', '40340', '40490', '4070', '4073', '4079b', '4081b', '4085d', '4162', '41677', '41747', '41748', '4175', '41769', '41854', '41862', '41883', '42022', '42061', '42610', '4265c', '4274', '4282', '4286', '4287', '43093', '4345', '43722', '43723', '43888', '44301b', '44302', '44302a', '44375', '44375b', '44567a', '44570', '4460', '4460b', '44728', '4477', '4488', '4510', '4515', '4519', '45590', '45677', '45749', '4589', '4589b', '4595', '4598', '4599b', '4600', '4617', '4623', '4624c02', '4697b', '4730', '4733', '4735', '4740', '4742', '47456', '47457', '47508', '47753', '47755', '47757', '47759', '48092', '48170', '48336', '4859', '4865', '4865b', '4868b', '4869', '4871', '48729b', '48989', '50304', '50745', '50923', '50950', '50955', '52036', '52037', '52038', '52501', '53451', '53989', '54200', '54383', '54384', '553c', '55981c05', '57515', '57518', '57563', '57585', '57906', '57909b', '58176', '58846', '59349', '6014bc01', '60176', '6019', '6020', '60470b', '60474', '60478', '60479', '60592', '60596', '6087', '60899', '6091', '61072', '6112', '6117', '61252', '6134', '6140', '61403', '61409', '61678', '6179', '6191', '6222', '6232', '6249', '62743', '63864', '63868', '63965', '64448', '64567', '6538c', '6541', '6558', '6587', '6632', '6636', '74698', '75937', '85080', '85970', '85984', '87580', '87615', '87697', '87745', '88072', '88930', '92280', '92582', '92946', '92947', '92950', '93058', '93273', '93274', '93589', '98138', '98141', '98283', '98288', '99780', '99781', 'x110c01', 'x240', 'x346', 'x577'] # Your class labels
#CLASSES_FILE = './models/fastai/classes.txt'
NAME_OF_PTH_FILE = '20200723_stage-final_res50_onlyFotos' # Name of your exported `.pth` file
#PATH_TO_MODELS_DIR = '/home/robert/LegoSorter/training_images/dataset_20200622_onlyFotos/';
PATH_TO_MODELS_DIR = Path('./models/fastai') # by default just use /models in root dir

class FastaiImageClassifier(object):
    def __init__(self):
        tfms = get_transforms(do_flip=True, flip_vert=True, max_warp=0.0, max_zoom=0.0)
        self.learner = self.setup_model(PATH_TO_MODELS_DIR, NAME_OF_PTH_FILE, classes, tfms, normalizer=imagenet_stats)

    def setup_model(self, path_to_pth_file, learner_name_to_load, classes,tfms, resnet_num=50, normalizer=None, **kwargs):
        "Initialize our learner for inference"
        defaults.device = torch.device('cpu')
        np.random.seed(42)
        datapredict = ImageDataBunch.single_from_classes(path_to_pth_file, classes, ds_tfms=tfms,size=224).normalize(imagenet_stats)
        learn = cnn_learner(datapredict, models.resnet50)
        learn.load(learner_name_to_load)
        return learn

    def predict(self, img_path):
        img = open_image(Path(img_path))
        pred_class, pred_idx, outputs = self.learner.predict(img)

        print('Class pred:', pred_class)
        print('Pred-idx:', pred_idx)
        #print('Losses:', outputs)
        print('partno:',  classes[pred_idx])
        return { 'predict_partno': classes[pred_idx]}